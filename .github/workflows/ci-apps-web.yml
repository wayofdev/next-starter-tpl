---
on: # yamllint disable-line rule:truthy
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    # Only consider those paths to trigger the action
    paths:
      - 'apps/web/**'
      - 'packages/**'
      - 'package.json'
      - 'pnpm*'
      - '.github/**'
      - 'tsconfig.base.json'

name: üîç Continuous integration for web app

jobs:
  integration:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: ['ubuntu-latest']
        node: ['18']
    env:
      TURBO_API: 'http://127.0.0.1:9080'
      TURBO_TEAM: 'next-starter-tpl'
      TURBO_TOKEN: 'local_server_turbo_relaxed_token'

    steps:
      - name: üì¶ Check out the codebase
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Setup node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          registry-url: 'https://registry.npmjs.org/'

      - name: üöÄ Setup TurboRepo local server
        uses: felixmosh/turborepo-gh-artifacts@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: ${{ env.TURBO_TOKEN }}

      - name: üì• Monorepo install
        uses: wayofdev/gh-actions/actions/pnpm-install@master
        with:
          enable-corepack: true
          cache-node-modules: true

      # see https://github.com/vercel/next.js/pull/27362
      - name: ‚ôªÔ∏è Restore "web" app build from cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/apps/web/.next/cache
            ${{ github.workspace }}/.cache
            ${{ github.workspace }}/**/tsconfig.tsbuildinfo
          key: web-cache-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

      - name: üìù Typecheck
        working-directory: apps/web
        run: |
          pnpm lint:types

      - name: üö® Linter
        working-directory: apps/web
        run: |
          pnpm lint

      - name: üß™ Unit tests
        working-directory: apps/web
        run: |
          pnpm test

      - name: üèó Build web-app
        working-directory: apps/web
        run: |
          pnpm --filter=web build
        env:
          NEXTAUTH_URL: http://localhost:3000
          NEXTAUTH_SECRET: secret-string-only-for-ci
          APP_CACHE_DSN: ''
          # Speed up build: they are linted in a previous step
          NEXT_IGNORE_ESLINT: true
          # Speed up build: they are type-checked in a previous step
          NEXT_IGNORE_TYPE_CHECK: true
          # Speed up build: don't run if not needed, enable if it becomes needed
          NEXT_DISABLE_SOURCEMAPS: true
          # Don't send telemetry for ci
          NEXT_TELEMETRY_DISABLED: true
          # To allow checking size-limits
          DISABLE_SENTRY: false
          # Fully disable sentry upload
          SENTRY_UPLOAD_DRY_RUN: true

      - name: üìâ Check browser bundle size limits
        working-directory: apps/web
        run: |
          pnpm --filter=web lint:size

      - name: üåé Ecmascript checks for build files
        working-directory: apps/web
        run: |
          pnpm --filter=web lint:dist

      - name: üì§ Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: ./apps/web/coverage/coverage-final.json
          flags: web
