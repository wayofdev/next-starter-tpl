---
on: # yamllint disable-line rule:truthy
  push:
    branches:
      - master
      - develop
    # Only consider those paths to trigger the action
    paths:
      - 'apps/web/**'
      - 'packages/**'
      - 'package.json'
      - 'pnpm*'
      - '.github/**'

  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    # Only consider those paths to trigger the action
    paths:
      - 'apps/web/**'
      - 'packages/**'
      - 'package.json'
      - 'pnpm*'
      - '.github/**'

name: üß™ E2E testing for web app

env:
  DISABLE_SENTRY: false
  SENTRY_LOG_LEVEL: debug
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
  SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
  SENTRY_URL: ${{ secrets.SENTRY_URL }}
  SENTRY_UPLOAD_DRY_RUN: true
  NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
  NEXTAUTH_URL: 'http://localhost:3000'

jobs:
  e2e:
    timeout-minutes: 10
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - 'ubuntu-22.04'
        node:
          - '18'
        include:
          - os: 'ubuntu-22.04'
            playwright_binary_path: ~/.cache/ms-playwright

    steps:
      - name: üì¶ Check out the codebase
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ‚öôÔ∏è Setup node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: üì• Monorepo install
        uses: ./.github/actions/pnpm-install

      # see https://github.com/vercel/next.js/pull/27362
      - name: ‚ôªÔ∏è Restore "web" app build from cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/apps/web/.next/cache
            ${{ github.workspace }}/.cache
            ${{ github.workspace }}/**/tsconfig.tsbuildinfo
          key: ${{ runner.os }}-web-${{ hashFiles('pnpm*.yaml') }}-${{ hashFiles('apps/web/src/**.[jt]sx?', 'apps/web/src/**.json') }}
          restore-keys: |
            ${{ runner.os }}-web-${{ hashFiles('pnpm*.yaml') }}-

      - name: üèó Build web-app
        working-directory: apps/web
        run: |
          pnpm --filter=web build
        env:
          NEXT_IGNORE_ESLINT: true
          NEXT_IGNORE_TYPE_CHECK: true
          NEXT_DISABLE_SOURCEMAPS: true
          NEXT_TELEMETRY_DISABLED: true

      - name: üì• Install playwright
        uses: ./.github/actions/playwright-install

      - name: üß™ Run E2E playwright tests on web app
        working-directory: apps/web
        run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- pnpm test:e2e
        env:
          CI: 1

      - name: üì§ Upload testing artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: web-app-playwright-test-results-${{ runner.os }}
          path: apps/web/e2e/.out
